{"version":3,"file":"js/719.e3cc8843.js","mappings":"yJAEA,MAAMA,EAAM,aAEG,MAAMC,EAGjBC,mBACI,MAAMC,QAAYC,EAAAA,EAAAA,IAAUJ,GAC5B,OAAOG,EAAIE,KAAKC,MAAK,CAACC,EAAGC,IACd,IAAIC,KAAKD,EAAEE,SAAW,IAAID,KAAKF,EAAEG,UAEhD,CAGAR,kBAAkBS,GACd,MAAMR,QAAYC,EAAAA,EAAAA,IAAUJ,EAAM,IAAMW,GACxC,OAAOR,EAAIE,IACf,CAGAH,mBAAmBU,GACf,MAAMT,QAAYC,EAAAA,EAAAA,KAAWJ,EAAKY,GAClC,OAAOT,EAAIE,IACf,CAGAH,oBAAoBS,EAAIC,GACpB,MAAMT,QAAYC,EAAAA,EAAAA,MAAYJ,EAAM,IAAMW,EAAIC,GAC9C,OAAOT,EAAIE,IACf,CAGAH,qBAAqBS,GACjB,MAAMR,QAAYC,EAAAA,EAAAA,UAAaJ,EAAM,IAAMW,GAC3C,OAAOR,EAAIE,IACf,E,yHClCJ,MAAML,EAAM,YAEG,MAAMa,EAGjBX,mBAAmBY,GACf,MAAMX,QAAYC,EAAAA,EAAAA,KAAWJ,EAAM,QAASc,GAC5C,OAAOX,EAAIE,IACf,E,yJCLJ,MAAMU,GAAQC,EAAAA,EAAAA,MAERC,EAAYC,KAAYA,GAAS,oBACjCC,EAAWD,GAAUA,GAAS,KAAU,wBAExCE,GAASC,EAAAA,EAAAA,MAETC,EAAU,CACZ,CACIC,KAAM,cACNL,MAAO,KAEX,CACIK,KAAM,cACNL,MAAO,MAEX,CACIK,KAAM,cACNL,MAAO,KAEX,CACIK,KAAM,gBACNL,MAAO,KAEX,CACIK,KAAM,gBACNL,MAAO,MAEX,CACIK,KAAM,gBACNL,MAAO,MAITM,GAAgBH,EAAAA,EAAAA,IAAI,KAEpBT,GAAOa,EAAAA,EAAAA,IAAS,CAClBC,SAAU,KACVC,KAAM,KACNL,QAAS,MAGPM,GAAUP,EAAAA,EAAAA,IAAI,MAGpB,SAASQ,EAAaX,GAClBM,EAAcN,MAAQA,EACtBN,EAAKU,QAAUJ,CACnB,CAEAY,eAAeC,IAEX,MAAMC,QAAiBZ,EAAOF,MAAMc,WAEpC,GAAIA,EAASC,OAASrB,EAAKU,QAAU,EAAG,CAEpCM,EAAQV,OAAQ,EAEhB,IAAIJ,EAAY,CACZ,oBAAuB,CACnB,SAAYF,EAAKc,SAAW,IAAMQ,KAAKC,OAAM,IAAI1B,MAAO2B,UAAY,KACpE,aAAgBxB,EAAKU,SAEzB,YAAe,CACX,QAAU,GAEd,iBAAoB,CAChB,WAAcV,EAAKe,OAI3B,MAAMU,QAAcxB,EAASwB,MAAMvB,GAE/BuB,IACAT,EAAQV,OAAQ,GAGpBoB,OAAOC,KAAKR,IAAIM,EAAO,CACnBG,UAAW,WACPC,MAAM,uBACV,EACAC,UAAW,WACPD,MAAM,uBACV,EACAE,QAAS,WACLF,MAAM,oBACV,EACAG,QAAS,WACLH,MAAM,4BACV,GAGR,CAEJ,C,OAEAI,EAAAA,EAAAA,KAAcf,UAWV,MAAM3B,QAAYF,EAAAA,EAAAA,KAAWc,EAAM+B,OAAOnC,IAAIoC,OAAM,IAAMT,OAAOU,SAASC,KAAO,MAEjFrC,EAAKc,SAAWvB,EAAI+C,KAAK,I,28CC/G7B,MAAMC,EAAc,EAEpB,O","sources":["webpack://client/./src/api/Infaq.js","webpack://client/./src/api/Midtrans.js","webpack://client/./src/views/PaymentView.vue","webpack://client/./src/views/PaymentView.vue?ccb6"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = '/api/infaq'\r\n\r\nexport default class Infaq {\r\n\r\n    // Get all\r\n    static async all() {\r\n        const res = await axios.get(url)\r\n        return res.data.sort((a, b) => {\r\n            return new Date(b.created) - new Date(a.created)\r\n        })\r\n    }\r\n\r\n    // Find\r\n    static async find(id) {\r\n        const res = await axios.get(url + '/' + id)\r\n        return res.data\r\n    }\r\n\r\n    // Store\r\n    static async store(form) {\r\n        const res = await axios.post(url, form)\r\n        return res.data\r\n    }\r\n\r\n    // Update\r\n    static async update(id, form) {\r\n        const res = await axios.patch(url + '/' + id, form)\r\n        return res.data\r\n    }\r\n\r\n    // Destroy\r\n    static async destroy(id) {\r\n        const res = await axios.delete(url + '/' + id)\r\n        return res.data\r\n    }\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst url = '/api/pay/'\r\n\r\nexport default class Midtrans {\r\n\r\n    // Get token\r\n    static async token(parameter) {\r\n        const res = await axios.post(url + 'token', parameter)\r\n        return res.data\r\n    }\r\n\r\n}","<script setup>\r\nimport Infaq from \"@/api/Infaq\";\r\nimport Midtrans from \"@/api/Midtrans\";\r\nimport { ref, reactive, onBeforeMount } from \"vue\";\r\nimport { useRoute } from \"vue-router\";\r\nconst route = useRoute()\r\n\r\nconst required = (value) => !!value || \"Kolom harus diisi\"\r\nconst minimal = (value) => value >= 100000 || \"Minimum infaq 100.000\"\r\n\r\nconst inputs = ref()\r\n\r\nconst nominal = [\r\n    {\r\n        text: 'Rp. 100.000',\r\n        value: 100000\r\n    },\r\n    {\r\n        text: 'Rp. 250.000',\r\n        value: 250000\r\n    },\r\n    {\r\n        text: 'Rp. 50.0000',\r\n        value: 500000\r\n    },\r\n    {\r\n        text: 'Rp. 1.000.000',\r\n        value: 1000000\r\n    },\r\n    {\r\n        text: 'Rp. 1.500.000',\r\n        value: 1500000\r\n    },\r\n    {\r\n        text: 'Rp. 2.000.000',\r\n        value: 2000000\r\n    }\r\n]\r\n\r\nconst activeNominal = ref(100000)\r\n\r\nconst form = reactive({\r\n    kategori: null,\r\n    nama: null,\r\n    nominal: 100000\r\n})\r\n\r\nconst loading = ref(null)\r\n\r\n\r\nfunction pilihNominal(value) {\r\n    activeNominal.value = value\r\n    form.nominal = value\r\n}\r\n\r\nasync function pay() {\r\n\r\n    const validate = await inputs.value.validate()\r\n\r\n    if (validate.valid && form.nominal > 0) {\r\n\r\n        loading.value = true\r\n\r\n        let parameter = {\r\n            \"transaction_details\": {\r\n                \"order_id\": form.kategori + '-' + Math.floor(new Date().getTime() / 1000),\r\n                \"gross_amount\": form.nominal\r\n            },\r\n            \"credit_card\": {\r\n                \"secure\": true\r\n            },\r\n            \"customer_details\": {\r\n                \"first_name\": form.nama,\r\n            }\r\n        };\r\n\r\n        const token = await Midtrans.token(parameter)\r\n\r\n        if (token) {\r\n            loading.value = false\r\n        }\r\n\r\n        window.snap.pay(token, {\r\n            onSuccess: function () {\r\n                alert(\"Pembayaran Berhasil!\")\r\n            },\r\n            onPending: function () {\r\n                alert(\"Menunggu Pembayaran!\")\r\n            },\r\n            onError: function () {\r\n                alert(\"Pembayaran Gagal!\")\r\n            },\r\n            onClose: function () {\r\n                alert('Tutup halaman pembayaran?');\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nonBeforeMount(async () => {\r\n\r\n    // const snapScript = document.createElement('script')\r\n    // snapScript.setAttribute('src', 'https://app.sandbox.midtrans.com/snap/snap.js')\r\n    // snapScript.setAttribute('data-client-key', 'SB-Mid-client-ZMewLn7labSKJRCZ')\r\n\r\n    // snapScript.setAttribute('src', 'https://app.midtrans.com/snap/snap.js')\r\n    // snapScript.setAttribute('data-client-key', 'Mid-client-ttOn86XoR5ibZEGl')\r\n\r\n    // document.head.appendChild(snapScript)\r\n\r\n    const res = await Infaq.find(route.params.id).catch(() => window.location.href = '/')\r\n\r\n    form.kategori = res.judul\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n    <h2>{{ form.kategori }}</h2>\r\n\r\n    <v-divider class=\"my-2\"></v-divider>\r\n\r\n    <v-form ref=\"inputs\" class=\"px-6 py-4 border\" @submit.prevent=\"pay()\">\r\n        <v-text-field v-model=\"form.nama\" :rules=\"[required]\" label=\"Nama\" variant=\"underlined\"\r\n            prepend-icon=\"mdi-account\" autofocus></v-text-field>\r\n\r\n        <div class=\"ma-4\">\r\n            <v-row no-gutters>\r\n                <v-col cols=\"5\" class=\"mb-2 mr-2\" v-for=\"item in nominal\" :key=\"item.value\">\r\n                    <v-btn color=\"blue\" :variant=\"activeNominal == item.value ? 'flat' : 'outlined'\"\r\n                        :data-value=\"item.value\" block @click=\"pilihNominal(item.value)\" class=\"text-capitalize\">\r\n                        {{ item.text }}\r\n                    </v-btn>\r\n                </v-col>\r\n            </v-row>\r\n        </div>\r\n\r\n        <v-text-field v-model=\"form.nominal\" :rules=\"[required, minimal]\" type=\"number\" label=\"Nominal Infaq\"\r\n            variant=\"underlined\" prepend-icon=\"mdi-currency-usd\"></v-text-field>\r\n\r\n        <v-divider></v-divider>\r\n\r\n        <v-btn type=\"submit\" color=\"primary\" class=\"mt-4\" v-if=\"!loading\">\r\n            Bayar Sekarang\r\n        </v-btn>\r\n        <v-btn type=\"submit\" color=\"primary\" class=\"mt-4\" v-else disabled>\r\n            <v-progress-circular indeterminate></v-progress-circular>\r\n        </v-btn>\r\n    </v-form>\r\n</template>","import script from \"./PaymentView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PaymentView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["url","Infaq","static","res","axios","data","sort","a","b","Date","created","id","form","Midtrans","parameter","route","useRoute","required","value","minimal","inputs","ref","nominal","text","activeNominal","reactive","kategori","nama","loading","pilihNominal","async","pay","validate","valid","Math","floor","getTime","token","window","snap","onSuccess","alert","onPending","onError","onClose","onBeforeMount","params","catch","location","href","judul","__exports__"],"sourceRoot":""}